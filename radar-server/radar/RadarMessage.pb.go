// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: RadarMessage.proto

package radar

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The data stream coming from a radar is a series of spokes.
// The number of spokes per revolution is different for each type of
// radar and can be found in the radar specification found at
// .../v1/api/radars as 'spokes'. The maximum length of each
// spoke is also defined there, as well as the legend that provides
// a lookup table for each byte of data in the spoke.
//
// The angle and bearing fields below are in terms of spokes, so
// range from [0..spokes>.
//
// Angle is a mandatory field and tells you the rotation of the spoke
// relative to the front of the boat, going clockwise. 0 means directly
// ahead, spokes / 4 is to starboard, spokes / 2 is directly astern, etc.
//
// Bearing, if set, means that either the radar or the radar server has
// enriched the data with a true bearing, e.g. 0 is directly North,
// spokes / 4 is directly West, spokes / 2 is South, etc.
//
// Likewise, time and lat/lon indicate the best effort when the spoke
// was generated, and the lat/lon of the radar at the time of generation.
//
// Latitude and longitude are expressed in 10**-16 degrees, for compatibility
// with NMEA-2000 data.
type RadarMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Radar    uint32                       `protobuf:"varint,1,opt,name=radar,proto3" json:"radar,omitempty"`
	Spokes   []*RadarMessage_Spoke        `protobuf:"bytes,2,rep,name=spokes,proto3" json:"spokes,omitempty"`
	Controls []*RadarMessage_ControlValue `protobuf:"bytes,3,rep,name=controls,proto3" json:"controls,omitempty"`
}

func (x *RadarMessage) Reset() {
	*x = RadarMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RadarMessage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RadarMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadarMessage) ProtoMessage() {}

func (x *RadarMessage) ProtoReflect() protoreflect.Message {
	mi := &file_RadarMessage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadarMessage.ProtoReflect.Descriptor instead.
func (*RadarMessage) Descriptor() ([]byte, []int) {
	return file_RadarMessage_proto_rawDescGZIP(), []int{0}
}

func (x *RadarMessage) GetRadar() uint32 {
	if x != nil {
		return x.Radar
	}
	return 0
}

func (x *RadarMessage) GetSpokes() []*RadarMessage_Spoke {
	if x != nil {
		return x.Spokes
	}
	return nil
}

func (x *RadarMessage) GetControls() []*RadarMessage_ControlValue {
	if x != nil {
		return x.Controls
	}
	return nil
}

type RadarMessage_Spoke struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Angle   uint32  `protobuf:"varint,1,opt,name=angle,proto3" json:"angle,omitempty"`           // [0..spokes>, angle from bow
	Bearing *uint32 `protobuf:"varint,2,opt,name=bearing,proto3,oneof" json:"bearing,omitempty"` // [0..spokes>, offset from True North
	Range   uint32  `protobuf:"varint,3,opt,name=range,proto3" json:"range,omitempty"`           // [meters], range in meters of the last pixel in data
	Time    *uint64 `protobuf:"varint,4,opt,name=time,proto3,oneof" json:"time,omitempty"`       // [millis since UNIX epoch] Time when spoke was generated or received
	Lat     *int64  `protobuf:"varint,6,opt,name=lat,proto3,oneof" json:"lat,omitempty"`         // [1e-16 degree] Location of radar at time of generation
	Lon     *int64  `protobuf:"varint,7,opt,name=lon,proto3,oneof" json:"lon,omitempty"`         // [1e-16 degree] Location of radar at time of generation
	Data    []byte  `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RadarMessage_Spoke) Reset() {
	*x = RadarMessage_Spoke{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RadarMessage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RadarMessage_Spoke) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadarMessage_Spoke) ProtoMessage() {}

func (x *RadarMessage_Spoke) ProtoReflect() protoreflect.Message {
	mi := &file_RadarMessage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadarMessage_Spoke.ProtoReflect.Descriptor instead.
func (*RadarMessage_Spoke) Descriptor() ([]byte, []int) {
	return file_RadarMessage_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RadarMessage_Spoke) GetAngle() uint32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *RadarMessage_Spoke) GetBearing() uint32 {
	if x != nil && x.Bearing != nil {
		return *x.Bearing
	}
	return 0
}

func (x *RadarMessage_Spoke) GetRange() uint32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *RadarMessage_Spoke) GetTime() uint64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *RadarMessage_Spoke) GetLat() int64 {
	if x != nil && x.Lat != nil {
		return *x.Lat
	}
	return 0
}

func (x *RadarMessage_Spoke) GetLon() int64 {
	if x != nil && x.Lon != nil {
		return *x.Lon
	}
	return 0
}

func (x *RadarMessage_Spoke) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type RadarMessage_ControlValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // See /v1/api/radars content JSON map 'controls'
	Value       float32 `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
	Auto        *bool   `protobuf:"varint,3,opt,name=auto,proto3,oneof" json:"auto,omitempty"`
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"` // Possible English string explaining value
}

func (x *RadarMessage_ControlValue) Reset() {
	*x = RadarMessage_ControlValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RadarMessage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RadarMessage_ControlValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadarMessage_ControlValue) ProtoMessage() {}

func (x *RadarMessage_ControlValue) ProtoReflect() protoreflect.Message {
	mi := &file_RadarMessage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadarMessage_ControlValue.ProtoReflect.Descriptor instead.
func (*RadarMessage_ControlValue) Descriptor() ([]byte, []int) {
	return file_RadarMessage_proto_rawDescGZIP(), []int{0, 1}
}

func (x *RadarMessage_ControlValue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RadarMessage_ControlValue) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *RadarMessage_ControlValue) GetAuto() bool {
	if x != nil && x.Auto != nil {
		return *x.Auto
	}
	return false
}

func (x *RadarMessage_ControlValue) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

var File_RadarMessage_proto protoreflect.FileDescriptor

var file_RadarMessage_proto_rawDesc = []byte{
	0x0a, 0x12, 0x52, 0x61, 0x64, 0x61, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xee, 0x03, 0x0a, 0x0c, 0x52, 0x61, 0x64, 0x61, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x64, 0x61, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x61, 0x64, 0x61, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x73,
	0x70, 0x6f, 0x6b, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x52, 0x61,
	0x64, 0x61, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x70, 0x6f, 0x6b, 0x65,
	0x52, 0x06, 0x73, 0x70, 0x6f, 0x6b, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x52, 0x61, 0x64,
	0x61, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73,
	0x1a, 0xd2, 0x01, 0x0a, 0x05, 0x53, 0x70, 0x6f, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e,
	0x67, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x12, 0x1d, 0x0a, 0x07, 0x62, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x00, 0x52, 0x07, 0x62, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15,
	0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x03, 0x6c,
	0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x03, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6c, 0x61, 0x74, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x6c, 0x6f, 0x6e, 0x1a, 0x8d, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x17, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x61, 0x75, 0x74, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x72, 0x61, 0x64, 0x61,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_RadarMessage_proto_rawDescOnce sync.Once
	file_RadarMessage_proto_rawDescData = file_RadarMessage_proto_rawDesc
)

func file_RadarMessage_proto_rawDescGZIP() []byte {
	file_RadarMessage_proto_rawDescOnce.Do(func() {
		file_RadarMessage_proto_rawDescData = protoimpl.X.CompressGZIP(file_RadarMessage_proto_rawDescData)
	})
	return file_RadarMessage_proto_rawDescData
}

var file_RadarMessage_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_RadarMessage_proto_goTypes = []interface{}{
	(*RadarMessage)(nil),              // 0: RadarMessage
	(*RadarMessage_Spoke)(nil),        // 1: RadarMessage.Spoke
	(*RadarMessage_ControlValue)(nil), // 2: RadarMessage.ControlValue
}
var file_RadarMessage_proto_depIdxs = []int32{
	1, // 0: RadarMessage.spokes:type_name -> RadarMessage.Spoke
	2, // 1: RadarMessage.controls:type_name -> RadarMessage.ControlValue
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_RadarMessage_proto_init() }
func file_RadarMessage_proto_init() {
	if File_RadarMessage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_RadarMessage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RadarMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RadarMessage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RadarMessage_Spoke); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RadarMessage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RadarMessage_ControlValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_RadarMessage_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_RadarMessage_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_RadarMessage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_RadarMessage_proto_goTypes,
		DependencyIndexes: file_RadarMessage_proto_depIdxs,
		MessageInfos:      file_RadarMessage_proto_msgTypes,
	}.Build()
	File_RadarMessage_proto = out.File
	file_RadarMessage_proto_rawDesc = nil
	file_RadarMessage_proto_goTypes = nil
	file_RadarMessage_proto_depIdxs = nil
}
